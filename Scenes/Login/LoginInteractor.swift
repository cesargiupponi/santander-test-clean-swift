//
//  LoginInteractor.swift
//  santander-test-clean-swift
//
//  Created by Cesar Giupponi Paiva on 12/04/19.
//  Copyright (c) 2019 Cesar Paiva. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol LoginBusinessLogic {
    func doLogin(request: LoginModel.Data.Request)
    func getUserSession() -> String
}

protocol LoginDataStore {
  var userAccount: LoginModel.Data.UserAccount? { get }
}

class LoginInteractor: LoginBusinessLogic, LoginDataStore {
    
  var presenter: LoginPresentationLogic?
  var loginWorker: LoginWorker?
  var userAccount: LoginModel.Data.UserAccount?
  
  // MARK: Do something
  
  func doLogin(request: LoginModel.Data.Request) {
    
    if let user = request.user, let password = request.password {
        
        if  (user.isEmpty() || password.isEmpty()) {
            presenter?.showAlert(title: "Campo em branco", message: "Informe o usuário e/ou senha para autenticar")
            return
        }
        
        if !self.validate(user: user) || !self.validate(password: password) {
            presenter?.showAlert(title: "Dados inválidos", message: "Login e/ou senha inválidos")
            return
        }
        
        loginWorker = LoginWorker()
        loginWorker?.requestLogin(user: user, password: password, responseData: { (response, error) in
            
            if response.userAccount != nil  {
                let result = LoginModel.Data.Response(userAccount: response.userAccount, error: response.error)
                self.userAccount = response.userAccount
                self.saveUser(user: user)
                self.presenter?.reponseSuccess(response: result)
            }
            
            if response.error != nil {
                self.presenter?.responseError(response: error)
            }
        })
    }
  }
    
    
    private func isUserEmpty(user: String)-> Bool {
        return user.isEmpty()
    }
    
    private func validate(user: String) -> Bool {
        return user.isValidEmail() || user.isValidCPF()
    }
    
    private func validate(password: String) -> Bool {
        return password.isValidPassword()
    }
    
    private func saveUser(user: String) {
        UserDefaults.standard.set(user, forKey: "user")
    }
    
    func getUserSession() -> String {
       guard let user = UserDefaults.standard.string(forKey: "user"), !user.isEmpty else {
            return ""
        }
        return user
    }
}

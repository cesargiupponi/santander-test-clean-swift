//
//  LoginViewController.swift
//  santander-test-clean-swift
//
//  Created by Cesar Giupponi Paiva on 12/04/19.
//  Copyright (c) 2019 Cesar Paiva. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol LoginDisplayLogic: class {
    func showAlert(title: String, message: String)
    func loginSuccess(response: LoginModel.Data.Response)
}

class LoginViewController: UIViewController, LoginDisplayLogic {
    
  var interactor: LoginBusinessLogic?
  var router: (NSObjectProtocol & LoginRoutingLogic & LoginDataPassing)?

  // MARK: Object lifecycle
  
  override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?) {
    super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
    setup()
  }
  
  required init?(coder aDecoder: NSCoder) {
    super.init(coder: aDecoder)
    setup()
  }
  
  // MARK: Setup
  
  private func setup() {
    let viewController = self
    let interactor = LoginInteractor()
    let presenter = LoginPresenter()
    let router = LoginRouter()
    viewController.interactor = interactor
    viewController.router = router
    interactor.presenter = presenter
    presenter.loginViewController = viewController
    router.loginViewController = viewController
    router.dataStore = interactor
  }
  
  // MARK: Routing
  
  override func prepare(for segue: UIStoryboardSegue, sender: Any?) {
    if let scene = segue.identifier {
        let selector = NSSelectorFromString("routeTo\(scene)WithSegue:")
        if let router = router, router.responds(to: selector) {
            router.perform(selector, with: segue)
        }
    }
  }
  
    // MARK: View lifecycle
  
    override func viewDidLoad() {
        super.viewDidLoad()
        self.customButton()
        
    }
    
    override func viewWillAppear(_ animated: Bool) {
        self.clearAllTextFields()
        self.getUser()
    }
  
    // MARK: Do something
  
    @IBOutlet weak var textFieldUser: UITextField!
    @IBOutlet weak var textFieldPassword: UITextField!
    @IBOutlet weak var buttonLogin: UIButton!
  
    private func clearAllTextFields() {
        self.textFieldUser.text?.removeAll()
        self.textFieldPassword.text?.removeAll()
    }
    
    private func getUser() {
        guard let user = interactor?.getUserSession(), !user.isEmpty else {
            self.textFieldUser.becomeFirstResponder()
            return
        }
        self.textFieldUser.text = user
        self.textFieldPassword.becomeFirstResponder()
    }
    
    private func customButton() {
        self.buttonLogin.layer.cornerRadius = 4
        self.buttonLogin.layer.shadowOffset = CGSize(width: 0, height: 3)
        self.buttonLogin.layer.shadowColor = #colorLiteral(red: 0.231372549, green: 0.2823529412, blue: 0.9333333333, alpha: 1)
        self.buttonLogin.layer.shadowOpacity = 0.3
        self.buttonLogin.layer.shadowRadius = 10
    }
    
    func showAlert(title: String, message: String) {
        let alert = UIAlertController(title: title, message: message, preferredStyle: .alert)
        alert.addAction(UIAlertAction(title: "Ok", style: .default, handler: nil))
        self.present(alert, animated: true, completion: nil)
    }
    
    @IBAction func loginButtonTapped(_ sender: Any) {
        if let user = self.textFieldUser.text, let password = self.textFieldPassword.text {
            let request: LoginModel.Data.Request = LoginModel.Data.Request(user: user, password: password)
            interactor?.doLogin(request: request)
        }
    }
    
    func loginSuccess(response: LoginModel.Data.Response) {
            self.performSegue(withIdentifier: "ShowStatements", sender: response)
    }
}
